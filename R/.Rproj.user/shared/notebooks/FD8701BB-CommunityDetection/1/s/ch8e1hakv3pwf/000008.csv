"0","#### FUNCTIONS ###################"
"0","GirvanNewman <- function(G) {"
"0","  #G = as.undirected(G2, mode= ""collapse"", edge.attr.comb=list(weight=""sum"", ""ignore""))"
"0","  community <- cluster_fast_greedy(G, weights=NULL)"
"0","  cat('Number of identified communities: ', length(community))"
"0","  return (community)"
"0","}"
"0","Walktrap <- function(G) {"
"0","  community <- walktrap.community(G, weights = NULL, steps = 4, merges = TRUE, modularity = TRUE, membership = TRUE )"
"0","  cat('Number of identified communities: ', length(community))"
"0","  return (community)"
"0","}"
"0","LeadingEigen <- function(G) {"
"0","  community <- leading.eigenvector.community(G, weights = NULL, steps = vcount(G))"
"0","  cat('Number of identified communities: ', length(community))"
"0","  return (community)"
"0","}"
"0","Infomap <- function(G) {"
"0","  community <- cluster_infomap(G, e.weights = NULL, v.weights = NULL,"
"0","  modularity = TRUE )"
"0","  cat('Number of identified communities: ', length(community))"
"0","  return (community)"
"0","}"
"0","plotGraph <- function(G, community, num_clusters) {"
"0","  community.groups <- cutat(community, num_clusters)"
"0","  #community.subtree <- cutree()"
"0","dendPlot(community, mode=""hclust"", ann=F, xlab=F, ylab=F)"
"0","  plot(structure(list(membership=community.groups), class=""communities""), G, rescale=T, edge.arrow.size=0.1, vertex.label.dist=0, asp =0, vertex.size = 12, vertex.label.cex = 0.8)"
"0","}"
"0","dynamicGraph <- function(G, community){"
"0","  members <- membership(comm)"
"0","  G.d3 <- igraph_to_networkD3(G2, group = members)"
"0","# Create force directed network plot"
"0","forceNetwork(Links = G.d3$links, Nodes = G.d3$nodes, Source = 'source', Target = 'target', NodeID = 'name', Group = 'group',linkColour = ""#afafaf"", fontSize=12, zoom=T, legend=T,Nodesize=1, opacity = 0.8, charge=-300, width = 1000, height = 1000)"
"0","}"
